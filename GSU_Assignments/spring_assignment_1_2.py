# -*- coding: utf-8 -*-
"""Spring_Assignment_1.2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UifxQsJ6GJAOB7kN96N7i6jpJGAaUfpe
"""

#Consider the following string: nums = '10,20,30,40,50'
#Create a Python script that creates a list of integers from the string.
#The resulting list will be: [10, 20, 30, 40, 50]
# Aaditya Changayil
# AChangayil1@student.gsu.edu
# DSCI 1302 PRINC OF PROG FOR DATA SCI II
# January 16, 2022.

class create_list: # this is the class

  # The init method is a pre-defined constructor for use in the class.
  # It takes in the variable nums as well as the self keyword.
  # The self keyword is an instance of a class. 
  # It allows us to access methods and variables.
  def __init__(self, nums): 
    self.n = nums # num is now assigned to the self keyword initialized as a variable.

  # self is passed, carrying attributes of the class.
  def num_list(self): # this is the method where the problem is conducted. 

    # splitnums is the string converted into a list, where each item is split by commas in the string.
    splitnums = self.n.split(',') 
    print(splitnums)
    for l in range(0, len(splitnums)): # for every item in the list, 
      splitnums[l] = int(splitnums[l]) # convert it into an integer.
    print(str(splitnums)) 

def main(): # This is the main method. It is the execution point for any program in the class.
  nums = '10,20,30,40,50' # nums is a string variable. It features a string sequence of 5 numbers separated by commas
  the_object = create_list(nums) # the object, the_object, is created from the class. nums is passed as a parameter.
  the_object.num_list() # the num_list() method is called with the object

# __name__ is a special variable that defines the name of the class from where it's called.
# __main__ represents __name__. __name__ will look for the main code to execute.
if __name__ == "__main__": 
  main()     # if __name__ == "__main__", the main method will ony directly execute.